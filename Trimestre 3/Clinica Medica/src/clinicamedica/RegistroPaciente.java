/*
 * RegistroPaciente.java
 *
 * Created on 1 de octubre de 2008, 21:10
 */

package clinicamedica;
import java.sql.*;
import javax.swing.*;
import java.io.*;
/**
 *
 * @author  32a08
 */
public class RegistroPaciente extends javax.swing.JFrame {
JOptionPane aviso;
    /** Creates new form RegistroPaciente */
    public RegistroPaciente(String codigo) {
        initComponents();
        txtdocumento.setText(codigo);
        setSize(400,300);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtdocumento = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txttelefono = new javax.swing.JTextField();
        txtfechanac = new javax.swing.JTextField();
        btnalta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("REGISTRO PACIENTE");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 130, 14);

        jLabel2.setText("Apellido:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 50, 140, 14);

        jLabel3.setText("Documento:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 170, 150, 14);

        jLabel4.setText("Direccion:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 80, 160, 14);

        jLabel5.setText("Telefono:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 110, 140, 14);

        jLabel6.setText("Fecha Nacimiento DD/MM/AA:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 140, 190, 14);
        getContentPane().add(txtdocumento);
        txtdocumento.setBounds(220, 170, 160, 19);
        getContentPane().add(txtnombre);
        txtnombre.setBounds(220, 20, 160, 19);
        getContentPane().add(txtapellido);
        txtapellido.setBounds(220, 50, 160, 19);
        getContentPane().add(txtdireccion);
        txtdireccion.setBounds(220, 80, 160, 19);
        getContentPane().add(txttelefono);
        txttelefono.setBounds(220, 110, 160, 19);
        getContentPane().add(txtfechanac);
        txtfechanac.setBounds(220, 140, 160, 19);

        btnalta.setText("Registrar");
        btnalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaltaActionPerformed(evt);
            }
        });
        getContentPane().add(btnalta);
        btnalta.setBounds(120, 210, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaltaActionPerformed
if(txtnombre.getText().compareTo("")==0){
        aviso.showMessageDialog(null,"Debe completar el campo Nombre","Error Campo", aviso.ERROR_MESSAGE);
        txtnombre.selectAll();
        txtnombre.requestFocus();
}else{
        if(txtapellido.getText().compareTo("")==0){
                aviso.showMessageDialog(null,"Debe completar el campo Apellido","Error Campo", aviso.ERROR_MESSAGE);
                txtapellido.selectAll();
                txtapellido.requestFocus();
        }else{
                if(txtdireccion.getText().compareTo("")==0){
                        aviso.showMessageDialog(null,"Debe completar el campo Direccion","Error Campo", aviso.ERROR_MESSAGE);
                        txtdireccion.selectAll();
                        txtdireccion.requestFocus();
                }else{
                    if(txttelefono.getText().compareTo("")==0){
                        aviso.showMessageDialog(null,"Debe completar el campo Telefono","Error Campo", aviso.ERROR_MESSAGE);
                        txttelefono.selectAll();
                        txttelefono.requestFocus();
                    }else{
                        if(txtfechanac.getText().compareTo("")==0){
                            aviso.showMessageDialog(null,"Debe completar el campo Fecha de Nacimiento","Error Campo",aviso.ERROR_MESSAGE);
                            txtfechanac.selectAll();
                            txtfechanac.requestFocus();
                        }else{                        
                            if(txtdocumento.getText().compareTo("")==0){
                                aviso.showMessageDialog(null,"Debe completar el campo Documento","Error Campo", aviso.ERROR_MESSAGE);
                                txtdocumento.selectAll();
                                txtdocumento.requestFocus();
                            }else{
                                validarDatos();
                            }
                        }
                    }
                }
        }
}
}//GEN-LAST:event_btnaltaActionPerformed
private void validarDatos(){
boolean ok=true;
int num;
String aux,aux2,aux3;
    //VALIDACION TELEFONO
    try{
        num=Integer.parseInt(txttelefono.getText());
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un telefono correcto","Error Campo", aviso.ERROR_MESSAGE);
    }
if(ok){
    //VALIDACION FECHA NACIMIENTO
    aux=txtfechanac.getText();
    aux2=txtfechanac.getText();
    aux3=txtfechanac.getText();
    
    // D D / M M / A A
    // 0 1 2 3 4 5 6 7
    aux=aux.substring(0,1);
    aux2=aux2.substring(3,5);
    aux3=aux3.substring(6,7);
    try{
        num=Integer.parseInt(aux);
        if(num>=1 && num<=31){
            try{
                num=Integer.parseInt(aux2);
                System.out.println(String.valueOf(num).toString());
                if(num>=01 && num <=12){
                    try{
                        Integer.parseInt(aux3);
                    }catch(NumberFormatException nfe){
                        ok=false;
                        aviso.showMessageDialog(null,"Debe ingresar un aÃ±o correcto AA","Error Campo",aviso.ERROR_MESSAGE);
                    }
                }else{
                    ok=false;
                    aviso.showMessageDialog(null,"Debe ingresar un mes correcto MM","Error Campo", aviso.ERROR_MESSAGE);                    
                }
            }catch(NumberFormatException nfe){
                ok=false;
                aviso.showMessageDialog(null,"Debe ingresar un mes correcto MM","Error Campo", aviso.ERROR_MESSAGE);
            }
        }else{
            ok=false;
            aviso.showMessageDialog(null,"Debe ingresar un dia correcto DD","Error Campo",aviso.ERROR_MESSAGE);
        }
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un dia correcto DD","Error Campo", aviso.ERROR_MESSAGE);
    }
}
if(ok){
    //VALIDACION DOCUMENTO
    try{
        Integer.parseInt(txtdocumento.getText());
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un documento correcto","Error Campo", aviso.ERROR_MESSAGE);
    }    
}
if(ok){
    cargarDatos();
}

}
public void cargarDatos(){
String drv="sun.jdbc.odbc.JdbcOdbcDriver";
String dbs="jdbc:odbc:Gestion";
String doc;
    try{
        Class.forName(drv);

        Connection cnx=DriverManager.getConnection(dbs);

        Statement stm= cnx.createStatement();
        ResultSet rs=stm.executeQuery("SELECT Documento FROM Pacientes WHERE Nombre='"+txtnombre.getText()+"' AND Apellido='"+txtapellido.getText()+"' AND Direccion='"+txtdireccion.getText()+"' AND Telefono="+txttelefono.getText()+" AND FechaNac='"+txtfechanac.getText()+"' AND Documento='"+txtdocumento.getText()+"'");
        try{
            rs.next();
            if(!rs.wasNull()){
                try{
                    doc=rs.getString("Documento");
                    aviso.showMessageDialog(null,"Paciente "+txtapellido.getText()+", "+txtnombre.getText()+" no se ha cargado en la base\nDUPLICACION DE DATOS","Error Carga",aviso.WARNING_MESSAGE);
                }catch(SQLException sqle){
                    int rst=stm.executeUpdate("INSERT into Pacientes (Nombre,Apellido,Direccion,Telefono,FechaNac,Documento) values('"+txtnombre.getText()+"','"+txtapellido.getText()+"','"+txtdireccion.getText()+"',"+txttelefono.getText()+",'"+txtfechanac.getText()+"','"+txtdocumento.getText()+"')");
                    aviso.showMessageDialog(null,"Paciente "+txtapellido.getText()+", "+txtnombre.getText()+" cargado en la base","Carga exitosa",aviso.WARNING_MESSAGE);
                    this.dispose();
                }
            }else{
                int rst=stm.executeUpdate("INSERT into Pacientes (Nombre,Apellido,Direccion,Telefono,FechaNac,Documento) values('"+txtnombre.getText()+"','"+txtapellido.getText()+"','"+txtdireccion.getText()+"',"+txttelefono.getText()+",'"+txtfechanac.getText()+"','"+txtdocumento.getText()+"')");
                aviso.showMessageDialog(null,"Paciente "+txtapellido.getText()+", "+txtnombre.getText()+" cargado en la base","Carga exitosa",aviso.WARNING_MESSAGE);
                this.dispose();
            }    
        }catch(SQLException sqle){
            int rst=stm.executeUpdate("INSERT into Pacientes (Nombre,Apellido,Direccion,Telefono,FechaNac,Documento) values('"+txtnombre.getText()+"','"+txtapellido.getText()+"','"+txtdireccion.getText()+"',"+txttelefono.getText()+",'"+txtfechanac.getText()+"','"+txtdocumento.getText()+"')");
            aviso.showMessageDialog(null,"Paciente "+txtapellido.getText()+", "+txtnombre.getText()+" cargado en la base","Carga exitosa",aviso.WARNING_MESSAGE);
            this.dispose();
        }
        rs.close();
        stm.close();
        cnx.close();
    }catch(ClassNotFoundException cnfe){
            //cnfe.printStackTrace();
    }catch(SQLException sqle){
           // sqle.printStackTrace();
    }
}
    /**
    * @param args the command line arguments
    */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnalta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtdocumento;
    private javax.swing.JTextField txtfechanac;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables

}
