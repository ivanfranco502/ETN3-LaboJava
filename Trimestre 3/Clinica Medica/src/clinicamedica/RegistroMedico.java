/*
 * RegistroCliente.java
 *
 * Created on 1 de octubre de 2008, 21:10
 */

package clinicamedica;
import java.sql.*;
import javax.swing.*;
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Vector;
/**
 *
 * @author  32a08
 */
public class RegistroMedico extends javax.swing.JFrame {
JOptionPane aviso;
    /** Creates new form RegistroCliente */
    public RegistroMedico() {
        initComponents();
        setSize(450,400);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtfin = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        txtdireccion = new javax.swing.JTextField();
        txtdias = new javax.swing.JTextField();
        txtcomienzo = new javax.swing.JTextField();
        btnalta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtespecialidad = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtdocumento = new javax.swing.JTextField();
        txttelefono = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 110, 14);

        jLabel2.setText("Apellido:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 50, 130, 14);

        jLabel3.setText("Hora Fin HH:MM:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 200, 180, 14);

        jLabel4.setText("Direccion:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 80, 120, 14);

        jLabel5.setText("Dias LMMMJV:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 140, 150, 14);

        jLabel6.setText("Hora Comienzo HH:MM:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 170, 170, 14);
        getContentPane().add(txtfin);
        txtfin.setBounds(240, 200, 160, 19);
        getContentPane().add(txtnombre);
        txtnombre.setBounds(240, 20, 160, 19);
        getContentPane().add(txtapellido);
        txtapellido.setBounds(240, 50, 160, 19);
        getContentPane().add(txtdireccion);
        txtdireccion.setBounds(240, 80, 160, 19);
        getContentPane().add(txtdias);
        txtdias.setBounds(240, 140, 160, 19);
        getContentPane().add(txtcomienzo);
        txtcomienzo.setBounds(240, 170, 160, 19);

        btnalta.setText("Registrar");
        btnalta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaltaActionPerformed(evt);
            }
        });
        getContentPane().add(btnalta);
        btnalta.setBounds(120, 300, 100, 23);

        jLabel7.setText("CodEspecialidad: ");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 110, 130, 14);
        getContentPane().add(txtespecialidad);
        txtespecialidad.setBounds(240, 110, 160, 19);

        jLabel8.setText("Documento:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(20, 260, 120, 14);

        jLabel9.setText("Telefono:");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 230, 160, 14);
        getContentPane().add(txtdocumento);
        txtdocumento.setBounds(240, 260, 160, 19);
        getContentPane().add(txttelefono);
        txttelefono.setBounds(240, 230, 160, 19);

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void validarDatos(){
boolean ok=true;
int num;
String aux,aux2;
    //VALIDACION ESPECIALIDAD
    try{
        num=Integer.parseInt(txtespecialidad.getText());
        if(num>0 &&  num<7){
        }else{
            ok=false;
            aviso.showMessageDialog(null,"Debe ingresar un codigo\nde especialidad correcto","Error Campo", aviso.ERROR_MESSAGE);
        }
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un codigo\nde especialidad correcto","Error Campo", aviso.ERROR_MESSAGE);
    }
if(ok){
    //VALIDACION DIAS
    aux=txtdias.getText();
    if(aux.length()<7){
        for(int x=0;x<aux.length();x++){
            if((!(aux.charAt(x)=='L')) && (!(aux.charAt(x)=='M')) && (!(aux.charAt(x)=='J')) && (!(aux.charAt(x)=='V'))){
                ok=false;
                aviso.showMessageDialog(null,"Debe ingresar un/os dia/s correcto/s","Error Campo", aviso.ERROR_MESSAGE);
            }
        }
    }else{
        ok=false;
        aviso.showMessageDialog(null,"Se excediÃ³ en la cantidad de dias (L-V)","Error Campo", aviso.ERROR_MESSAGE);
    }
}
if(ok){
    //VALIDACION HORA COMIENZO
    aux=txtcomienzo.getText();
    aux2=txtcomienzo.getText();
    aux=aux.substring(0,1);
    aux2=aux2.substring(3,4);
    try{
        Integer.parseInt(aux);
        try{
            Integer.parseInt(aux2);
        }catch(NumberFormatException nfe){
            ok=false;
            aviso.showMessageDialog(null,"Debe ingresar una hora de comienzo correcta","Error Campo", aviso.ERROR_MESSAGE);
        }
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar una hora de comienzo correcta","Error Campo", aviso.ERROR_MESSAGE);
    }
}
if(ok){
    //VALIDACION HORA FIN
    aux=txtfin.getText();
    aux2=txtfin.getText();
    aux=aux.substring(0,1);
    aux2=aux2.substring(3,4);
    try{
        Integer.parseInt(aux);
        try{
            Integer.parseInt(aux2);
        }catch(NumberFormatException nfe){
            ok=false;
            aviso.showMessageDialog(null,"Debe ingresar una hora de finalizacion correcta","Error Campo", aviso.ERROR_MESSAGE);
        }
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar una hora de finalizacion correcta","Error Campo", aviso.ERROR_MESSAGE);
    }    
}
if(ok){
    //VALIDACION TELEFONO
    try{
        Integer.parseInt(txttelefono.getText());
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un telefono correcto","Error Campo", aviso.ERROR_MESSAGE);
    }    
}
if(ok){
    //VALIDACION DOCUMENTO
    try{
        Integer.parseInt(txtdocumento.getText());
    }catch(NumberFormatException nfe){
        ok=false;
        aviso.showMessageDialog(null,"Debe ingresar un documento correcto","Error Campo", aviso.ERROR_MESSAGE);
    }    
}
if(ok){
    cargarDatos();
}

}
public void cargarDatos(){
String drv="sun.jdbc.odbc.JdbcOdbcDriver";
String dbs="jdbc:odbc:Gestion";
int cont=0;
int fin=0;
String doc=null;
boolean paso=false;
try{
    Class.forName(drv);

    Connection cnx=DriverManager.getConnection(dbs);

    Statement stm= cnx.createStatement();
    ResultSet rs=stm.executeQuery("SELECT Codigo FROM Medicos WHERE Nombre='"+txtnombre.getText()+"' AND Apellido='"+txtapellido.getText()+"' AND Direccion='"+txtdireccion.getText()+"' AND CodEspecialidad="+txtespecialidad.getText()+" AND Dias='"+txtdias.getText()+"' AND HoraComienzo='"+txtcomienzo.getText()+"' AND HoraFin='"+txtfin.getText()+"'");

    try{
        while(rs.next()){
            cont=Integer.parseInt((String)rs.getString("Codigo"));
            
            paso=true;
            System.out.println("DATO:"+(String)rs.getString("Codigo"));
        }
        if(cont==0 && !paso){
            int rst=stm.executeUpdate("INSERT into Medicos (Nombre,Apellido,Direccion,CodEspecialidad,Dias,HoraComienzo,HoraFin,Telefono,Documento) values('"+txtnombre.getText()+"','"+txtapellido.getText()+"','"+txtdireccion.getText()+"',"+txtespecialidad.getText()+",'"+txtdias.getText()+"','"+txtcomienzo.getText()+"','"+txtfin.getText()+"','"+txttelefono.getText()+"','"+txtdocumento.getText()+"')");
            ResultSet rs1=stm.executeQuery("SELECT Codigo FROM Medicos WHERE Nombre='"+txtnombre.getText()+"' AND Apellido='"+txtapellido.getText()+"' AND Direccion='"+txtdireccion.getText()+"' AND CodEspecialidad="+txtespecialidad.getText()+" AND Dias='"+txtdias.getText()+"' AND HoraComienzo='"+txtcomienzo.getText()+"' AND HoraFin='"+txtfin.getText()+"' AND Documento='"+txtdocumento.getText()+"'");
            fin=1;
            doc=(String)rs1.getString("Codigo");
            rs1.close();
        }else{
            fin=2;
        }
    }catch(SQLException sqle){
        int rst=stm.executeUpdate("INSERT into Medicos (Nombre,Apellido,Direccion,CodEspecialidad,Dias,HoraComienzo,HoraFin,Telefono,Documento) values('"+txtnombre.getText()+"','"+txtapellido.getText()+"','"+txtdireccion.getText()+"',"+txtespecialidad.getText()+",'"+txtdias.getText()+"','"+txtcomienzo.getText()+"','"+txtfin.getText()+"','"+txttelefono.getText()+"','"+txtdocumento.getText()+"')");
        ResultSet rs1=stm.executeQuery("SELECT Codigo FROM Medicos WHERE Nombre='"+txtnombre.getText()+"' AND Apellido='"+txtapellido.getText()+"' AND Direccion='"+txtdireccion.getText()+"' AND CodEspecialidad="+txtespecialidad.getText()+" AND Dias='"+txtdias.getText()+"' AND HoraComienzo='"+txtcomienzo.getText()+"' AND HoraFin='"+txtfin.getText()+"' AND Documento='"+txtdocumento.getText()+"'");
        rs1.next();
        fin=1;
        doc=(String)rs1.getString("Codigo");
        rs1.close();  
    }
    rs.close();
    stm.close();
    cnx.close();
}catch(ClassNotFoundException cnfe){
        //cnfe.printStackTrace();
}catch(SQLException sqle){
        //sqle.printStackTrace();
}
    switch(fin){
        case 0:
            aviso.showMessageDialog(null,"Medico "+txtapellido.getText()+", "+txtnombre.getText()+" no se ha cargado en la base\nDUPLICACION DE DATOS","Error Carga",aviso.WARNING_MESSAGE);
            break;
        case 1:
            aviso.showMessageDialog(null,"Medico "+txtapellido.getText()+", "+txtnombre.getText()+" cargado en la base.\nSu cÃ³digo es "+doc,"Carga Exitosa",aviso.WARNING_MESSAGE);
            this.dispose();
            break;
        case 2:
            aviso.showMessageDialog(null,"Medico "+txtapellido.getText()+", "+txtnombre.getText()+" no se ha cargado en la base\nDUPLICACION DE DATOS","Error Carga",aviso.WARNING_MESSAGE);
            break;
    }
}
private void btnaltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaltaActionPerformed
if(txtnombre.getText().compareTo("")==0){
        aviso.showMessageDialog(null,"Debe completar el campo Nombre","Error Campo", aviso.ERROR_MESSAGE);
        txtnombre.selectAll();
        txtnombre.requestFocus();
}else{
        if(txtapellido.getText().compareTo("")==0){
                aviso.showMessageDialog(null,"Debe completar el campo Apellido","Error Campo", aviso.ERROR_MESSAGE);
                txtapellido.selectAll();
                txtapellido.requestFocus();
        }else{
                if(txtdireccion.getText().compareTo("")==0){
                        aviso.showMessageDialog(null,"Debe completar el campo Direccion","Error Campo", aviso.ERROR_MESSAGE);
                        txtdireccion.selectAll();
                        txtdireccion.requestFocus();
                }else{
                        if(txtespecialidad.getText().compareTo("")==0){
                                aviso.showMessageDialog(null,"Debe completar el campo Especialidad","Error Campo", aviso.ERROR_MESSAGE);
                                txtespecialidad.selectAll();
                                txtespecialidad.requestFocus();
                        }else{
                                if(txtdias.getText().compareTo("")==0){
                                        aviso.showMessageDialog(null,"Debe completar el campo Dias","Error Campo", aviso.ERROR_MESSAGE);
                                        txtdias.selectAll();
                                        txtdias.requestFocus();
                                }else{
                                    if(txtcomienzo.getText().compareTo("")==0){
                                            aviso.showMessageDialog(null,"Debe completar el campo HoraComienzo","Error Campo", aviso.ERROR_MESSAGE);
                                            txtcomienzo.selectAll();
                                            txtcomienzo.requestFocus();
                                    }else{
                                        if(txtfin.getText().compareTo("")==0){
                                            aviso.showMessageDialog(null,"Debe completar el campo HoraFin","Error Campo", aviso.ERROR_MESSAGE);
                                            txtfin.selectAll();
                                            txtfin.requestFocus();
                                        }else{
                                            if(txttelefono.getText().compareTo("")==0){
                                                aviso.showMessageDialog(null,"Debe completar el campo Telefono","Error Campo", aviso.ERROR_MESSAGE);
                                                txttelefono.selectAll();
                                                txttelefono.requestFocus();
                                            }else{
                                                if(txtdocumento.getText().compareTo("")==0){
                                                    aviso.showMessageDialog(null,"Debe completar el campo Documento","Error Campo", aviso.ERROR_MESSAGE);
                                                    txtdocumento.selectAll();
                                                    txtdocumento.requestFocus();
                                                }else{
                                                    System.out.println("VALIDAR DATOS");
                                                    validarDatos();
                                                }
                                            }
                                        }
                                    }
                                }
                        }
                }
        }
   }
}//GEN-LAST:event_btnaltaActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroMedico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnalta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtcomienzo;
    private javax.swing.JTextField txtdias;
    private javax.swing.JTextField txtdireccion;
    private javax.swing.JTextField txtdocumento;
    private javax.swing.JTextField txtespecialidad;
    private javax.swing.JTextField txtfin;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefono;
    // End of variables declaration//GEN-END:variables

}
